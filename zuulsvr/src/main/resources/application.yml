server:
  port: 5555

  #Setting logging levels
logging:
    level:
      com.netflix: WARN
      org.springframework.web: WARN
      ir.sk.eagleeye: DEBUG

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
        defaultZone: http://localhost:8761/eureka/

zuul:
#  ignored-services: '*' # The ignored-services attribute is set to * to exclude the registration of all eureka service ID based routes
  prefix:  /apii
  routes:
    # Your organizationservice and licensingservice are mapped to the organization and licensing endpoints respectively
    organizationservice: /organization/**
    licensingservice: /licensing/**
  sensitiveHeaders: Cookie,Set-Cookie # todo using the @EnableOAuth2Sso annotation

#  I’ve found that with non-JVM-based languages,
#  you’re better off setting up a Spring Cloud “Sidecar” instance. The Spring
#  Cloud sidecar allows you to register non-JVM services with a Eureka instance and then proxy them through Zuul.
#    licensestatic:
#      path: /licensestatic/**
#      url: http://licenseservice-static:8081